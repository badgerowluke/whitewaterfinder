{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/auth/auth.service.ts","./src/app/favorites/favorites.component.ts","./src/app/favorites/favorites.component.html","./src/app/model/riveruserreference.ts","./src/app/profile/profile.component.ts","./src/app/profile/profile.component.html","./src/app/river-detail/river-detail.component.ts","./src/app/river-detail/river-detail.component.html","./src/app/river-list/river-list.component.ts","./src/app/river-list/river-list.component.html","./src/app/services/river-data.service.ts","./src/app/services/river-user.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Routes, RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { RiverListComponent } from './river-list/river-list.component';\nimport { RiverDetailComponent } from './river-detail/river-detail.component';\nimport { FavoritesComponent } from './favorites/favorites.component';\nimport { ProfileComponent } from './profile/profile.component';\nconst routes: Routes = [\n    { path: '', pathMatch: 'full', component: RiverListComponent },\n    { path: 'river/:id', component: RiverDetailComponent },\n    { path: 'favorites', component: FavoritesComponent },\n    { path: 'profile', component: ProfileComponent },\n    { path: '**', pathMatch: 'full', redirectTo: ''}\n];\n\n@NgModule({\n    imports: [RouterModule.forRoot(routes)],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule {}\n\nexport const routableComponents = [\n    RiverListComponent,\n    RiverDetailComponent,\n    FavoritesComponent\n];\n","import { Component, OnChanges, OnInit } from '@angular/core';\nimport { AuthService } from './auth/auth.service';\n\n@Component({\n  selector: 'app-root-paddle',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  providers: []\n})\nexport class AppComponent implements OnInit, OnChanges {\n  title = 'paddle-finder';\n  profile: any;\n  constructor(public auth: AuthService) {\n\n  }\n  ngOnInit() { }\n\n  ngOnChanges(changes) {\n    console.log(changes);\n  }\n\n  openNav() {\n    document.getElementById(\"side-nav\").style.width = \"250px\";\n    document.body.style.backgroundColor = \"rgba(0,0,0,0.4)\";    \n  }\n  closeNav() {\n    document.getElementById(\"side-nav\").style.width = \"0\";\n    document.body.style.backgroundColor = \"white\";    \n  }\n  \n}\n","<div>\n\n\n \n  <div id='side-nav' class='sidenav' (focusout)='closeNav()' >\n    <pre *ngIf=\"auth.userProfile$ | async as profile\">\n      <a href=\"javascript:void(0)\" [routerLink]=\"['profile']\">\n        <img style='height:36px;border-radius:16px;'src=\"{{profile.picture}}\" class=\"avatar\" alt=\"avatar\">\n      </a>\n      \n    </pre>\n    <a href=\"javascript:void(0)\" class='closebtn' (click)='closeNav()'>&times;</a>\n    <a href=\"javascript:void(0)\" (click)=\"auth.login()\" *ngIf=\"!auth.loggedIn\">Login</a>\n    <a href=\"javascript:void(0)\" (click)=\"auth.logout()\" *ngIf=\"auth.loggedIn\">Logout</a>\n    <a href=\"javascript:void(0)\" [routerLink]=\"['']\" [state]=\"{data:{user: profile}}\">search</a>\n    <a href=\"javascript:void(0)\" [routerLink]=\"['favorites']\" [state]=\"{data:{user: profile}}\">favorites</a>\n\n  </div>      \n  \n  <div class='banner'>\n    <div style='padding-left:8px;top:32px;position:relative;'>\n      <span class=\"hamburger\" (click)='openNav()' style='cursor:pointer;'></span>    \n    </div>\n    <h1><span class='title'>checking water conditions is hard</span></h1>\n    <h3 class='subtitle'>\n      Finding the information about whether it is safe (or fun) enough to get on your favorite river\n      is hard.  We're hoping that this makes that task a little more painless so you can spend\n      more time enjoying the outdoors.\n    </h3>\n  </div>\n\n\n  <div class='outlet'>\n      <router-outlet></router-outlet>\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\n\nimport { NgModule } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport { AppComponent } from './app.component';\nimport { RiverDataService } from './services/river-data.service';\nimport { RiverUserSerice } from './services/river-user.service';\nimport { AppRoutingModule, routableComponents } from './app-routing.module';\nimport { HttpClientModule } from '@angular/common/http';\nimport { ServiceWorkerModule } from '@angular/service-worker';\nimport { environment } from '../environments/environment';\nimport { ProfileComponent } from './profile/profile.component';\nimport 'rxjs';\n\n\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    routableComponents,\n    ProfileComponent\n  ],\n  imports: [\n    BrowserModule,\n\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule,\n\n    ServiceWorkerModule.register('ngsw-worker.js', { enabled: environment.production })\n  ],\n  providers: [RiverDataService, RiverUserSerice],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport createAuth0Client from '@auth0/auth0-spa-js';\nimport Auth0Client from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\nimport { from, of, Observable, BehaviorSubject, combineLatest, throwError } from 'rxjs';\nimport { tap, catchError, concatMap, shareReplay } from 'rxjs/operators';\nimport { Router } from '@angular/router';\nimport { environment } from 'src/environments/environment';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService {\n\n\n  // Create a local property for login status\n  loggedIn: boolean = null;\n  // Create an observable of Auth0 instance of client\n  auth0Client$ = (from(\n    createAuth0Client({\n      domain: environment.auth0Domain,\n      client_id: environment.auth0ClientId,\n      redirect_uri: environment.baseUrl + \"/callback\",\n      scope: environment.openIdScope\n    })\n  ) as Observable<Auth0Client>).pipe(\n    shareReplay(1), // Every subscription receives the same shared value\n    catchError(err => throwError(err))\n  );\n  // Define observables for SDK methods that return promises by default\n  // For each Auth0 SDK method, first ensure the client instance is ready\n  // concatMap: Using the client instance, call SDK method; SDK returns a promise\n  // from: Convert that resulting promise into an observable\n  isAuthenticated$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.isAuthenticated())),\n    tap(res => this.loggedIn = res)\n  );\n  handleRedirectCallback$ = this.auth0Client$.pipe(\n    concatMap((client: Auth0Client) => from(client.handleRedirectCallback()))\n  );\n  // Create subject and public observable of user profile data\n  private userProfileSubject$ = new BehaviorSubject<any>(null);\n  userProfile$ = this.userProfileSubject$.asObservable();\n\n\n  constructor(private router: Router) {\n\n    // On initial load, check authentication state with authorization server\n    // Set up local auth streams if user is already authenticated\n    this.localAuthSetup();\n    // Handle redirect from Auth0 login\n    this.handleAuthCallback();\n  }\n\n  // When calling, options can be passed if desired\n  // https://auth0.github.io/auth0-spa-js/classes/auth0client.html#getuser\n  getUser$(options?): Observable<any> {\n    return this.auth0Client$.pipe(\n      concatMap((client: Auth0Client) => from(client.getUser(options))),\n      tap(user => this.userProfileSubject$.next(user))\n    );\n  }\n\n  private localAuthSetup() {\n    // This should only be called on app initialization\n    // Set up local authentication streams\n    const checkAuth$ = this.isAuthenticated$.pipe(\n      concatMap((loggedIn: boolean) => {\n        if (loggedIn) {\n          // If authenticated, get user and set in app\n          // NOTE: you could pass options here if needed\n          return this.getUser$();\n        }\n        // If not authenticated, return stream that emits 'false'\n        return of(loggedIn);\n      })\n    );\n    checkAuth$.subscribe();\n  }\n\n  login(redirectPath: string = '/') {\n    // A desired redirect path can be passed to login method\n    // (e.g., from a route guard)\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log in\n      client.loginWithRedirect({\n        redirect_uri: environment.baseUrl + \"/callback\",\n        appState: { target: redirectPath }\n      });\n    });\n  }\n\n  private handleAuthCallback() {\n    // Call when app reloads after user logs in with Auth0\n    const params = window.location.search;\n    if (params.includes('code=') && params.includes('state=')) {\n      let targetRoute: string; // Path to redirect to after login processsed\n      const authComplete$ = this.handleRedirectCallback$.pipe(\n        // Have client, now call method to handle auth callback redirect\n        tap(cbRes => {\n          // Get and set target redirect route from callback results\n          targetRoute = cbRes.appState && cbRes.appState.target ? cbRes.appState.target : '/';\n        }),\n        concatMap(() => {\n          // Redirect callback complete; get user and login status\n          return combineLatest([\n            this.getUser$(),\n            this.isAuthenticated$\n          ]);\n        })\n      );\n      // Subscribe to authentication completion observable\n      // Response will be an array of user and login status\n      authComplete$.subscribe(([user, loggedIn]) => {\n        // Redirect to target route after callback processing\n        this.router.navigate([targetRoute]);\n      });\n    }\n  }\n\n  logout() {\n    // Ensure Auth0 client instance exists\n    this.auth0Client$.subscribe((client: Auth0Client) => {\n      // Call method to log out\n      client.logout({\n        client_id: environment.auth0ClientId,\n        returnTo: `${window.location.origin}`\n      });\n    });\n  }\n\n}","import { Component, OnInit } from '@angular/core';\n@Component({\n    selector: 'app-favorites',\n    templateUrl:'favorites.component.html',\n    styleUrls:[]\n})\nexport class FavoritesComponent implements OnInit {\n    ngOnInit()\n    {\n        console.log(history.state.data);\n    }\n}","<div class=\"outlet\">\n    COMING SOON\n</div>","export class RiverUserPreference {\n    sub:string;\n    riverName:string;\n    riverId:string;\n    lastReported:Date;\n    lastFlow:string;\n    lastLevel:string;\n}","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  constructor(public auth: AuthService) { }\n\n  ngOnInit() {\n  }\n\n}","<pre *ngIf=\"auth.userProfile$ | async as profile\">\n<code>{{ profile | json }}</code>\n</pre>","import { Component, OnInit,  NgZone, ViewChild, ElementRef, OnDestroy } from '@angular/core';\nimport { River } from '../model/river';\nimport { RiverUserPreference } from '../model/riveruserreference';\nimport { RiverDataService } from '../services/river-data.service';\nimport { ActivatedRoute } from '@angular/router';\n\nimport * as _ from 'lodash';\n\nimport { RiverUserSerice } from '../services/river-user.service';\n@Component({\n    selector: 'app-river-detail',\n    templateUrl: 'river-detail.component.html',\n    styleUrls: ['river-detail.component.scss']\n})\nexport class RiverDetailComponent implements OnInit, OnDestroy {\n    riverCode: string;\n    river: River;\n    point: any;\n\n    \n    constructor(private route: ActivatedRoute, \n                private riverData: RiverDataService,\n                private riverUser: RiverUserSerice) {\n\n    }\n    ngOnInit() {\n\n        this.riverCode = this.route.snapshot.params['id'];\n        this.point = this.route.snapshot.queryParams;\n        this.pullRiverDetails(this.riverCode);\n    }\n    ngOnDestroy() {\n        //TODO\n    }\n\n    getLatitude() {\n        return this.river.latitude;\n    }\n\n    pullRiverDetails: (riverCode: string) => River = (riverCode: string) => {\n        let thisRiver: River;\n        this.riverData.getRiverDetails(riverCode).then((data) => {\n\n            thisRiver = data;\n            const vals = _.each(thisRiver.riverData, (r) => {\n                r.dateTime = new Date(r.dateTime);\n            });\n            const vals2 = _.orderBy(thisRiver.riverData, ['dateTime'], ['desc']);\n\n            thisRiver.riverData = vals2;\n            this.river = thisRiver;\n\n        });\n        \n        return thisRiver;\n    }\n\n    saveRiverAsFavorite: () => void =() => {\n        let user = this.riverUser.getActiveUser();\n        if(!user) {\n            alert(\"please log in\")\n        } else {\n            const pref = new RiverUserPreference();\n            pref.sub = user.sub;\n            pref.riverName = this.river.name;\n            pref.riverId= this.river.riverId;\n            pref.lastFlow = this.river.riverData[0].flow;\n            pref.lastLevel = this.river.riverData[0].level;\n            pref.lastReported = this.river.riverData[0].dateTime;\n\n            this.riverUser.postUserFavorite(pref).then((data) => {\n                console.log(data);\n            });\n        }\n\n        \n    }\n}\n","<div class='outlet'>\n    <div >\n        <div>\n            <h3 class='' *ngIf='river'>\n                {{river.name}}\n                <button (click)='saveRiverAsFavorite()'>Add To Favorites</button>\n            </h3>\n\n        </div>\n        <h3>\n            <span *ngIf='river && river.latitude'>location: {{river.latitude}}</span>\n            <span *ngIf='river && river.latitude && river.longitude'>,&nbsp;</span>\n            <span *ngIf='river'>{{river.longitude}}</span>\n        </h3>\n        <table style='left:0px;right:0px;' *ngIf='river'>\n            <thead>\n                <tr>\n                    <td>Date</td>\n                    <td>Flow</td>\n                    <td>Level</td>\n                </tr>\n            </thead>\n            <tbody>\n\n            <tr *ngFor=\"let data of river.riverData\">\n                <td>{{ data.dateTime }}</td>\n                <td>{{ data.flow }} <span *ngIf='data.flow'>cf/s</span></td>\n                <td>{{ data.level }} <span *ngIf='data.level'>ft</span></td>\n            </tr>\n            </tbody>\n        </table>\n    </div>\n\n</div>\n","import { RiverDataService } from '../services/river-data.service';\nimport { Component } from '@angular/core';\nimport { River } from '../model/river';\nimport * as _ from 'lodash';\nimport { AuthService } from '../auth/auth.service';\n@Component({\n    selector: 'app-river-list',\n    templateUrl: 'river-list.component.html',\n    styleUrls: ['river-list.component.scss']\n})\nexport class RiverListComponent {\n    searchValue = '';\n    rivers: any[];\n    data: River[]\n    constructor(private riverData: RiverDataService, private auth: AuthService) { }\n    findRivers: (value: any) => void = (value: any) => {\n\n        if(value.keyCode in [8, 46] )\n        {\n\n        } else {\n            const search = this.searchValue;\n\n            this.riverData.getAllUSRivers(search).then((response) =>{\n                this.rivers = response;\n            })\n\n\n        }        \n    }\n}\n","\n<div class='river-search' >\n    <div >\n      <input class=\"search-bar\"  \n          id='riverSearch' type=\"text\" [(ngModel)]='searchValue' (keyup)='findRivers($event)'/>\n    </div>\n    \n  </div>\n  <div class='river-list'>\n      <div class='river-list-data' *ngFor=\"let river of rivers\">\n        <span class='river-search-result' \n        [routerLink]=\"['river', river.riverId]\"\n        [queryParams]=\"{'lat':river.latitude, 'long': river.longitude}\">\n        {{river.name.toUpperCase()}}\n      </span>\n      </div>\n  </div>\n  \n  \n  ","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { River } from '../model/river';\nimport { environment } from '../../environments/environment';\n\n\n\n\n@Injectable()\nexport class RiverDataService {\n    constructor(private http: HttpClient) {}\n    getAllUSRivers: (partialName: string) => Promise<River[]> = (partialName: string) => {\n        if(!partialName) {\n            return this.http.get<River[]>(environment.baseUrl + \"/api/rivers?code=\" + environment.riverKeyCode).toPromise();\n\n        } else {\n            return this.http.get<River[]>(environment.baseUrl + '/api/rivers?name=' + partialName + \"&code=\" + environment.riverKeyCode).toPromise();\n\n        }\n    }\n    getRiverDetails: (riverCode: string) => Promise<River> = (riverCode: string) => {\n        return this.http.get<River>(environment.baseUrl + '/api/rivers/details/' + riverCode + \"?code=\" + environment.detailsKeyCode).toPromise();\n\n    }\n}\n\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport { AuthService } from \"../auth/auth.service\";\nimport { RiverUserPreference } from \"../model/riveruserreference\";\n\n@Injectable()\nexport class RiverUserSerice {\n    private activeUser;\n    constructor(private http: HttpClient, \n                private auth: AuthService) {\n        this.auth.userProfile$.subscribe(\n            value => this.activeUser = value,\n            err => console.error(err)\n        )\n    }\n\n    getActiveUser: () => any = () => {\n\n        return this.activeUser;\n    }\n    \n    postUserFavorite: (preference:RiverUserPreference) => any = (preference:RiverUserPreference) => {\n\n        return this.http.post(environment.baseUrl + \"/api/users\", preference).toPromise();\n\n    }\n\n    getUserFavorites: (sub:string) => Promise<RiverUserPreference[]> = (sub:string) => {\n        return this.http.get<RiverUserPreference[]>(environment.baseUrl + `/api/users/${sub}`).toPromise();\n\n    }\n}","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  baseUrl: 'http://localhost:4200',\n  riverKeyCode: '',\n  detailsKeyCode:'',\n  auth0Domain: 'brgs.auth0.com',\n  auth0ClientId: 'UjY1xSZt2XT8Fn2kXgmneO7moLILNtB2',\n  openIdScope: 'openid email profile'\n};\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}