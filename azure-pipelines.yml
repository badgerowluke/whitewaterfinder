
trigger:
    - master  


stages: 
- stage: Build
  jobs:
  - job: Build
    pool:
      vmImage: 'windows-latest'
    continueOnError: false
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '10.x'
      displayName: 'set node environment' 

    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'
        vstsFeed: 'e7750945-8da0-48c7-ad5d-6c474174e6d1'

    - script: npm install && npm run build
      displayName: 'build User Pref functions'
      workingDirectory: whitewaterfinder.api.user

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        command: 'build'
        projects: '**/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*[Tt]est/*.csproj'
        arguments: '--configuration $(BuildConfiguration)'

    - task: ArchiveFiles@2
      displayName: bundle api 
      inputs: 
        rootFolderOrFile: whitewaterfinder.api/bin/release/netstandard2.0
        includeRootFolder: false
        archiveFile: $(Pipeline.Workspace)/riversfunc/app.zip

    - task: PublishBuildArtifacts@1
      displayName: 'Publish River Functions'
      inputs:
        PathtoPublish: $(Pipeline.Workspace)/riversfunc/app.zip
        ArtifactName: 'riversfunc'

    - task: PublishBuildArtifacts@1
      displayName: 'Push infra scripts'
      inputs:
        PathtoPublish: 'whitewaterfinder.infrastructure/'
        ArtifactName: infra


    - task: ArchiveFiles@2
      displayName: 'bundle bot app' 
      inputs: 
        rootFolderOrFile: whitewaterfinder.app.bot/bin/release/netcoreapp2.1
        includeRootFolder: false
        archiveFile: $(Pipeline.Workspace)/websterbot/app.zip

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Bot App'
      inputs:
        PathtoPublish: $(Pipeline.Workspace)/websterbot/app.zip
        ArtifactName: 'websterbot'

    - task: ArchiveFiles@2
      displayName: bundle preferences api 
      inputs: 
        rootFolderOrFile: whitewaterfinder.api.user/dist
        includeRootFolder: false
        archiveFile: $(Pipeline.Workspace)/preferencesfunc/app.zip

    - task: PublishBuildArtifacts@1
      displayName: 'Copy Preferences Functions'
      inputs:
        PathtoPublish: $(Pipeline.Workspace)/preferencesfunc/app.zip
        ArtifactName: 'preferencesfunc'

- stage: Deploy
  jobs:
  - job: Deploy
    pool:
      vmImage: 'windows-latest'
    steps:

    - task: ExtractFiles@1
      inputs: 
        destinationFolder: $(Pipeline.Workspace)/infra  

    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in azuredeploy.json'
      inputs:
        rootDirectory: 'whitewaterfinder.infrastructure/'
        targetFiles: azuredeploy.json
        tokenPrefix: '{%%'
        tokenSuffix: '%%}'      

    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Or Update Resource Group action on waterfinder'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        resourceGroupName: waterfinder
        location: 'North Central US'
        csmFile: 'whitewaterfinder.infrastructure/azuredeploy.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/parameters.json'
        overrideParameters: '-storageAccountType "Standard_LRS" -appName "paddle-finder" -appPlanName "WaterFinderPlan" -preferencesApp "paddle-finder-preferences" '       

    - download: current
      artifact: riversfunc

    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy River API'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        appType: functionapp
        WebAppName: 'paddle-finder'
        Package: '$(Pipeline.Workspace)/riversfunc/app.zip'
        TakeAppOfflineFlag: true      

    - download: current
      artifact: preferencesfunc

    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Preferences API'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        appType: functionapp
        WebAppName: 'paddle-finder-preferences'
        Package: '$(Pipeline.Workspace)/preferencesfunc/app.zip'
        TakeAppOfflineFlag: true   

    - download: current
      artifact: infra

    - task: AzurePowerShell@3
      displayName: 'Build Azure Search Index'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        ScriptPath: 'whitewaterfinder.infrastructure/deployment.ps1'
        ScriptArguments: 'EB04EAC1B8CEC232A638FD852945180B "$(Pipeline.Workspace)/infra/riverswithid.json"'
        azurePowerShellVersion: LatestVersion     
