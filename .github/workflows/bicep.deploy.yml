on:
  push:
    branches:
      - trunk
    paths:
      - 'whitewaterfinder.infrastructure/bicep/**'
      - '.github/workflows/bicep.deploy.yml'
jobs:
  build-and-provision:
    name: 'provision infra with bicep'
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
    steps:
      - name: "checkout"
        uses: actions/checkout@v2.1.0

      - name: az login
        uses: azure/login@v1
        with:
          creds: ${{ secrets. AZCLI_CREDS }}
      - name: provision
        working-directory: whitewaterfinder.infrastructure
        run: |
          az deployment sub create -f main.bicep \
                                  -l northcentralus \
                                  --parameters 'serviceprincipal=${{ secrets.SERVICE_PRINCIPAL }}' \
                                               'sppassword=${{ secrets.SPPASSWORD }}' \
                                               'tenant=${{ secrets.TENANT }}' \
                                               'botPassword=${{ secrets.BOTPASSWORD }}' \
                                               'luisAppId=${{ secrets.LUISID }}' \
                                               'adminId=${{ secrets.ADMINID }}'


      - name: 'push documents to search'
        shell: powershell
        run: |
          az login --service-principal  --username ${{ secrets.SERVICE_PRINCIPAL }} `
                                        --password ${{ secrets.SPPASSWORD }} --tenant ${{ secrets.TENANT }}  
          $keys = az search admin-key show --output json --resource-group waterfinder `
                  --service-name "waterfindersearch" | ConvertFrom-Json

          $key = $keys.primaryKey
          Write-Output 'Attempting to Build Index'

          if($key)
          {

              $indexHeaders = @{

                  'api-key' = $key
                  'Content-Type' = 'application/json'
                  'Accept' = 'application/json'
              }

              $filePath = $path + $jsonFile

              $rivers =  Get-Content $filePath |  ConvertFrom-Json

              $index = @{value = @()}

              $index.value += ($rivers)

              Write-Output "attempting to POST documents to Azure Search"


              $index = ConvertTo-Json -InputObject $index
              $updateUrl = "https://waterfindersearch.search.windows.net/indexes/riversearch-index/docs/index?api-version=2019-05-06"
              Invoke-RestMethod -Uri $updateUrl -Headers $indexHeaders -Method Post -Body $index -TimeoutSec 300


              Write-Output "invoked REST"
          } else {
              Write-Output 'was not able to get search keys'
          }


      - name: logout
        run: az logout