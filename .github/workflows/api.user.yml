#use this line for any meaningless changes that need to be made since GHA doesn't have a manual run 1
on:
  push:
    branches:
      - trunk
    paths:
      - 'whitewaterfinder.api.user/**'
      - '.github/workflows/api.user.yml'

env:
  AZURE_FUNCTIONAPP_PACKAGE_PATH: 'whitewaterfinder.api.user'      

jobs:
  build-and-test-users-api:
    name: "build and test the users api"
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
        working-directory: 'whitewaterfinder.api.user'
    steps:
      - uses: actions/checkout@v2.1.0
      - uses: actions/setup-node@v2
        with:
          node-version: 12.x

      - name: 'build user pref functions'
        run: |
          npm install && npm run build
          # this is here for a test of running Dapr and running a cluster in my local data center
          docker build . --file ./Dockerfile --label "runnumber-${GITHUB_RUN_ID}" --tag users.api

      - name: az login
        uses: azure/login@v1
        with: 
          creds: ${{ secrets.AZCLI_CREDS }}

      - name: deploy to funtionapp
        uses: azure/webapps-deploy@v2
        with: 
          app-name: 'paddle-finder-preferences'
          package: '${{ env.AZURE_FUNCTIONAPP_PACKAGE_PATH }}/dist'          

      - name: logout
        run: az logout

      - name: Log in to registry
        # This is where you will update the PAT to GITHUB_TOKEN
        run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin   

      - name: Push image
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/users.api

          # Change all uppercase to lowercase
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # Strip git ref prefix from version
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # Strip "v" prefix from tag name
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # Use Docker `latest` tag convention
          [ "$VERSION" == "trunk" ] && VERSION=latest

          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          docker tag users.api $IMAGE_ID:$VERSION
          docker push $IMAGE_ID:$VERSION        