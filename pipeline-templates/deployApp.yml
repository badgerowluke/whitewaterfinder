parameters:
- name: 'environment'
  type: string
  default: ''
- name: 'stageTitle'
  type: string
- name: 'appName'
  type: string
  default: ''
- name: 'resourceGroup'
  type: string
  default: ''
- name: 'region'
  type: string
  default: 'North Central US'  

stages:
- stage: ${{parameters.stageTitle}}
  jobs:
  - job: 'backend_app_deployment'
    pool:
      vmImage: 'windows-latest'

    steps:
    - download: current
      displayName: 'download river apis'
      artifact: riversfunc
    
    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy River API'
      inputs:
          azureSubscription: 'whitewaterfinder-sp'
          appType: functionapp
          WebAppName: '${{parameters.appName}}'
          Package: '$(Pipeline.Workspace)/riversfunc/app.zip'
          TakeAppOfflineFlag: true      
          
    - download: current
      displayName: 'download preferences apis'
      artifact: preferencesfunc
    
    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Preferences API'
      inputs:
          azureSubscription: 'whitewaterfinder-sp'
          appType: functionapp
          WebAppName: '${{parameters.appName}}-preferences'
          Package: '$(Pipeline.Workspace)/preferencesfunc/app.zip'
          TakeAppOfflineFlag: true   

  - job: 'backend_security'
    pool:
      vmImage: 'windows-latest'
    dependsOn: 'backend_app_deployment'
    steps:
      
      
      - task: AzureResourceGroupDeployment@2
        displayName: 'Deploy APIM to waterfinder'
        inputs:
            azureSubscription: 'whitewaterfinder-sp'
            resourceGroupName: '${{parameters.resourceGroup}}'
            location: '${{parameters.region}}'
            csmFile: 'whitewaterfinder.infrastructure/apimdeploy.json'  
            csmParametersFile: 'whitewaterfinder.infrastructure/apimparameters.json'   
            overrideParameters: '-adminEmail "$(adminEmail)" -appName "${{parameters.appName}}" -preferencesApp "${{parameters.appName}}-preferences"'   
        
      - download: current
        artifact: infra

      - task: AzureCLI@2
        displayName: 'Configure APIM'
        inputs:
          azureSubscription: 'whitewaterfinder-sp'
          scriptType: ps
          scriptLocation: 'scriptPath'
          ScriptPath: '$(Pipeline.Workspace)/infra/apimdeploy.ps1'    
          azurePowerShellVersion: LatestVersion      
          ScriptArguments: '${{parameters.resourceGroup}} $(Pipeline.Workspace)\infra'      

  - job: 'deploy_bot_code'
    pool:
      vmImage: 'windows-latest'
    steps:
      - download: current
        artifact: websterbot    

      - task: AzureRmWebAppDeployment@3
        displayName: 'Deploy Bot App'
        inputs:
          azureSubscription: 'whitewaterfinder-sp'
          appType: app
          WebAppName: 'WhiteWaterWebster'
          Package: '$(Pipeline.Workspace)/websterbot/publish.zip'                     