parameters:
- name: 'storageAccountName'
  type: string
  default: ''
- name: 'storageAccountType'
  type: string
  default: 'Standard_LRS'
- name: 'appName'
  type: string
  default: ''

stages:
- stage: DeployDev
  jobs:
  - job: 'backend_infra'
    pool:
      vmImage: 'windows-latest'
    steps:     
    
    - task: AzureCLI@2
      displayName: 'Get Azure Search Query Key'
      inputs: 
        azureSubscription: 'whitewaterfinder-sp'
        scriptType: ps
        scriptLocation: 'scriptPath'
        ScriptPath: 'whitewaterfinder.infrastructure/getazuresearchkey.ps1'
        ScriptArguments: 'brgs-global'   

    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in azuredeploy.json'
      inputs:
        rootDirectory: 'whitewaterfinder.infrastructure/'
        targetFiles: azuredeploy.json
        tokenPrefix: '{%%'
        tokenSuffix: '%%}'     

    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy backend ARM Template'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        resourceGroupName: $(resourceGroupDev)
        location: '$(azureRegion)'
        csmFile: 'whitewaterfinder.infrastructure/azuredeploy.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/parameters.json'
        overrideParameters: '-storageAccountName ${{parameters.storageAccountName}} -storageAccountType "${{parameters.storageAccountType}}" -appName "${{parameters.appName}}" -appPlanName "WaterFinderPlan" -preferencesApp "dev-paddle-finder-preferences"  -azureSearchKey $(searchKey)'       

    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy AKV'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        resourceGroupName: $(resourceGroupDev)
        location: '$(azureRegion)'
        csmFile: 'whitewaterfinder.infrastructure/kvtemplate.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/kvparameters.json'
        overrideParameters: '-tenantId "$(tenantId)" -adminId "$(adminId)"'

  - job: 'backend_app_deployment'
    pool:
      vmImage: 'windows-latest'
    dependsOn: 'backend_infra'
    steps:
    - download: current
      displayName: 'download river apis'
      artifact: riversfunc
    
    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy River API'
      inputs:
          azureSubscription: 'whitewaterfinder-sp'
          appType: functionapp
          WebAppName: 'dev-paddle-finder'
          Package: '$(Pipeline.Workspace)/riversfunc/app.zip'
          TakeAppOfflineFlag: true      
          
    - download: current
      displayName: 'download preferences apis'
      artifact: preferencesfunc
    
    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Preferences API'
      inputs:
          azureSubscription: 'whitewaterfinder-sp'
          appType: functionapp
          WebAppName: 'dev-paddle-finder-preferences'
          Package: '$(Pipeline.Workspace)/preferencesfunc/app.zip'
          TakeAppOfflineFlag: true   


  - job: 'backend_security'
    pool:
      vmImage: 'windows-latest'
    dependsOn: 'backend_app_deployment'
    steps:
      
      
      - task: AzureResourceGroupDeployment@2
        displayName: 'Deploy APIM to waterfinder'
        inputs:
            azureSubscription: 'whitewaterfinder-sp'
            resourceGroupName: $(resourceGroupDev)
            location: '$(azureRegion)'
            csmFile: 'whitewaterfinder.infrastructure/apimdeploy.json'  
            csmParametersFile: 'whitewaterfinder.infrastructure/apimparameters.json'   
            overrideParameters: '-adminEmail "$(adminEmail)" -appName "dev-paddle-finder" -preferencesApp "dev-paddle-finder-preferences"'   
        
      - download: current
        artifact: infra

      - task: AzureCLI@2
        displayName: 'Configure APIM'
        inputs:
          azureSubscription: 'whitewaterfinder-sp'
          scriptType: ps
          scriptLocation: 'scriptPath'
          ScriptPath: '$(Pipeline.Workspace)/infra/apimdeploy.ps1'    
          azurePowerShellVersion: LatestVersion      
          ScriptArguments: '$(resourceGroupDev) $(Pipeline.Workspace)\infra'            

  - job: 'bot'
    dependsOn: 'backend_infra'
    pool:
      vmImage: 'windows-latest'
    steps:
    - task: qetza.replacetokens.replacetokens-task.replacetokens@3
      displayName: 'Replace tokens in botdeploy.json'
      inputs:
        rootDirectory: 'whitewaterfinder.infrastructure/'
        targetFiles: botdeploy.json
        tokenPrefix: '{%%'
        tokenSuffix: '%%}'    

    - task: AzureResourceGroupDeployment@2
      displayName: 'Azure Deployment:Create Or Update Resource Group action on waterfinder'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        resourceGroupName: $(resourceGroupDev)
        location: '$(azureRegion)'
        csmFile: 'whitewaterfinder.infrastructure/botdeploy.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/botparams.json' 
        overrideParameters: '-botInsightsName "dev-paddle-finder"'        

    - download: current
      artifact: websterbot    

    - task: AzureRmWebAppDeployment@3
      displayName: 'Deploy Bot App'
      inputs:
        azureSubscription: 'whitewaterfinder-sp'
        appType: app
        WebAppName: 'WhiteWaterWebster'
        Package: '$(Pipeline.Workspace)/websterbot/publish.zip'
