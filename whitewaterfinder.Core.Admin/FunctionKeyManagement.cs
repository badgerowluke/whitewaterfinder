using System.Threading.Tasks;
using Microsoft.IdentityModel.Clients.ActiveDirectory;
using System.Net.Http;
using System.Net.Http.Headers;

namespace whitewaterfinder.Core.Admin
{
    public interface IFunctionKeyManagementUtility
    {
        Task<string> GetAccessToken(string clientId, string clientSecret, string azureTenantId);

        Task<string> GetNewFunctionKey(string keyName, string accessToken, string appName, string functionName);

    }

    public class FunctionKeyManagementUtility : IFunctionKeyManagementUtility
    {
        private readonly HttpClient _client;

        public FunctionKeyManagementUtility(HttpClient client)
        {
            _client = client;
        }

        private const string msftLoginUrl = "https://login.microsoftonline.com";

        ///<summary>
        /// returns an access token from Azure Active Directory 
        ///</summary>
        public async Task<string> GetAccessToken(string clientId, string clientSecret, string azureTenantId)
        {
            var context = new AuthenticationContext($"{msftLoginUrl}/{azureTenantId}", new TokenCache());
            var cred = new ClientCredential(clientId, clientSecret);
            var token = await context.AcquireTokenAsync(clientId, cred);
            return token.AccessToken;

        }

        ///<summary>
        /// returns a random string value generated by the function app service
        ///</summary>
        public async Task<string> GetNewFunctionKey(string keyName, string accessToken, string appName, string functionName)
        {
            var key = string.Empty;
            var funcToken = string.Empty;
            using(var request = new HttpRequestMessage(HttpMethod.Post, $"https://{appName}.azurewebsites.net/admin/functions/{functionName}/keys/{keyName}"))
            {
                _client.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", accessToken);
                var response = await _client.SendAsync(request);

            }


            return key;

        }

    }
}