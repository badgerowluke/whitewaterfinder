{
    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "apimName": {"type": "string", "defaultValue": "whitewater-finder" },
        "location": {
            "type": "string",
            "defaultValue": "[resourceGroup().location]", 
            "metadata": {
                "description": "Location for all resources."
            }
        }, 
        "adminEmail":{ "type": "string", "defaultValue": "badgerow.luke@outlook.com" },
        "orgName": { "type": "string", "defaultValue": "burning-river-geospatial-solutions" },
        "preferencesApp" : { "type" : "string" , "defaultValue" : "paddle-finder-preferences" },
        "appName": { "type": "string", "defaultValue" : "paddle-finder" },
        "botName": { "type": "string", "defaultValue": "paddle-finder-webster" },
        "adminName": { "type": "string", "defaultValue": "paddle-finder-admin"}
    },
    "resources": [
        {
            "type": "Microsoft.ApiManagement/service",
            "apiVersion": "2019-01-01",
            "name": "[parameters('apimName')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Consumption",
                "capacity": 0
            },
            "properties": {
                "publisherEmail": "[parameters('adminEmail')]",
                "publisherName": "[parameters('orgName')]"
            }
        },
        {
            "type":"Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('appName'))]",
            "dependsOn":[

                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties":{
                "displayName": "rivers",
                "protocols": [
                    "https"
                ],
                "path": "Rivers",
                "isCurrent": true,
                "apiRevision": "1",
                "serviceUrl": "[concat('https://', parameters('appName'), '.azurewebsites.net/api')]"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/policies",
            "apiVersion": "2019-12-01",
            "name": "[concat(parameters('apimName'), '/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "value": "<policies>\r\n  <inbound>\r\n    <cors allow-credentials=\"true\">\r\n      <allowed-origins>\r\n        <origin>http://localhost:5000</origin>\r\n        <origin>http://localhost:3000</origin>\r\n        <origin>http://localhost:4200</origin>\r\n        <origin>https://orange-bush-089d46710.azurestaticapps.net</origin>\r\n        <origin>http://paddle-finder.com</origin>\r\n        <origin>https://paddle-finder.com</origin>\r\n      </allowed-origins>\r\n      <allowed-methods preflight-result-max-age=\"300\">\r\n        <method>GET</method>\r\n        <method>POST</method>\r\n        <method>DELETE</method>\r\n        <method>OPTIONS</method>\r\n      </allowed-methods>\r\n      <allowed-headers>\r\n        <header>content-type</header>\r\n        <header>accept</header>\r\n      </allowed-headers>\r\n    </cors>\r\n  </inbound>\r\n  <backend>\r\n    <forward-request />\r\n  </backend>\r\n  <outbound>\r\n    <set-header name=\"Request-Id\" exists-action=\"override\">\r\n      <value>@(context.Response.Headers.GetValueOrDefault(\"x-ms-request-id\"))</value>\r\n    </set-header>\r\n  </outbound>\r\n  <on-error />\r\n</policies>",
                "format": "xml"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'), '/riverdetails')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]"

            ],
            "properties": {
                "displayName": "RiverDetails",
                "method": "GET",
                "urlTemplate": "/details/{riverCode}",
                "templateParameters": [{
                     "name": "riverCode",
                     "type": "string"
                }],
                "responses": [],
                "operationId": "RiverDetails"
            }            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion":"2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'), '/riverdetails/policy')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]",
                "[resourceId('Microsoft.Apimanagement/service/apis/operations', parameters('apimName'), parameters('appName'), 'riverdetails')]"
            ],
            "properties":{
                "value":"<policies></policies>",
                "format":"xml"
            }         
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'),'/rivers')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]"

            ],
            "properties": {
                "displayName": "Rivers",
                "method": "GET",
                "urlTemplate": "/Rivers",
                "templateParameters": [],
                "responses": []
            }            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion":"2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'), '/rivers/policy')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]",
                "[resourceId('Microsoft.Apimanagement/service/apis/operations', parameters('apimName'), parameters('appName'), 'rivers')]"
            ],
            "properties":{
                "value":"<policies></policies>",
                "format":"xml"
            }         
        },        
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'),'/riversbystate')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]"

            ],
            "properties": {
                "displayName": "RiversByState",
                "method": "GET",
                "urlTemplate": "rivers/{state}",
                "templateParameters": [{
                    "name": "state",
                    "type": "string"
                }],
                "responses": []
            }            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion":"2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('appName'),'/riversbystate/policy')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('appName'))]",
                "[resourceId('Microsoft.Apimanagement/service/apis/operations', parameters('apimName'), parameters('appName'), 'riversbystate')]"
            ],
            "properties":{
                "value":"<policies></policies>",
                "format":"xml"
            }         
        },        
        {
            "type":"Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('preferencesApp'))]",
            "dependsOn":[

                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties":{
                "displayName": "users",
                "protocols": [
                    "https"
                ],
                "path": "users",
                "isCurrent": true,
                "apiRevision": "1"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('preferencesApp'), '/getuserpreferences')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('preferencesApp'))]"

            ],
            "properties": {
                "displayName": "GetUserPreferences",
                "method": "GET",
                "urlTemplate": "users/{subId}",
                "templateParameters": [
                    {
                        "name": "subId",
                        "type": "string"
                    }
                ],
                "responses": []
            }            
        },  
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion":"2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('preferencesApp'),'/getuserpreferences/policy')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('preferencesApp'))]",
                "[resourceId('Microsoft.Apimanagement/service/apis/operations', parameters('apimName'), parameters('preferencesApp'), 'getuserpreferences')]"
            ],
            "properties":{
                "value":"<policies></policies>",
                "format":"xml"
            }         
        },                 
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('preferencesApp'), '/postuserpreferences')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('preferencesApp'))]"

            ],
            "properties": {
                "displayName": "PostUserPreferences",
                "method": "POST",
                "urlTemplate": "/",
                "templateParameters": [],
                "responses": []
            }            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion":"2019-01-01",
            "name":"[concat(parameters('apimName'), '/', parameters('preferencesApp'),'/postuserpreferences/policy')]",
            "dependsOn":[
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('preferencesApp'))]",
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimName'), parameters('preferencesApp'), 'postuserpreferences')]"
            ],
            "properties": {
                "value":"<policies></policies>",
                "format":"xml"
            }         
        },
        {
            "type": "Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'),'/', parameters('botName'))]",
            "dependsOn":[

                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "webster",
                "protocols": [ "https" ],
                "path": "webster",
                "isCurrent": true,
                "apiRevision": "1"
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/',parameters('botName'), '/messages')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('botName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "messages",
                "method":"POST",
                "urlTemplate": "messages",
                "templateParameters": [],
                "responses": []                
            }
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('botName'), '/messages/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimName'), parameters('botName'), 'messages')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('botName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],  
            "properties": {
                "value":"<policies></policies>",
                "format":"xml"
            }          
        },
        {
            "type":"Microsoft.ApiManagement/service/apis",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('adminName'))]",
            "dependsOn":[

                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties":{
                "displayName": "pfadmin",
                "protocols": [
                    "https"
                ],
                "path": "pfadmin",
                "isCurrent": true,
                "apiRevision": "1"
            }
        },  
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/',parameters('adminName'), '/functionkeys')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('adminName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "functionkeys",
                "method": "POST",
                "urlTemplate": "functionkeys/{appName}/{keyName}",
                "templateParameters": [
                    {
                        "name": "appName",
                        "type": "string"
                    },
                    {
                        "name": "keyName",
                        "type": "string"
                    }
                ],
                "responses":[]
            }            
        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('adminName'), '/functionkeys/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimName'), parameters('adminName'), 'functionkeys')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('adminName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],  
            "properties": {
                "value":"<policies></policies>",
                "format":"xml"
            }          
        },        
        {
            "type": "Microsoft.ApiManagement/service/apis/operations",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('adminName'), '/email')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('adminName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],
            "properties": {
                "displayName": "email",
                "method": "POST",
                "urlTemplate": "email",
                "templateParameters": [],
                "responses":[]
            }            

        },
        {
            "type": "Microsoft.ApiManagement/service/apis/operations/policies",
            "apiVersion": "2019-01-01",
            "name": "[concat(parameters('apimName'), '/', parameters('adminName'), '/email/policy')]",
            "dependsOn": [
                "[resourceId('Microsoft.ApiManagement/service/apis/operations', parameters('apimName'), parameters('adminName'), 'email')]",
                "[resourceId('Microsoft.ApiManagement/service/apis', parameters('apimName'), parameters('adminName'))]",
                "[resourceId('Microsoft.ApiManagement/service', parameters('apimName'))]"
            ],  
            "properties": {
                "value":"<policies></policies>",
                "format":"xml"
            }          
        }      
    ],

    "outputs":{ 
        "subkey" : {
            "type": "string",
            "value": "[reference(resourceId('Microsoft.ApiManagement/service/subscriptions', parameters('apimName'), 'master'), '2019-01-01').primaryKey]"
        }
    }
}