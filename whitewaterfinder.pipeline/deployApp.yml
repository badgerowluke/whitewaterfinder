parameters:
- name: 'environment'
  type: string
  default: ''
- name: 'stageTitle'
  type: string
- name: 'appName'
  type: string
  default: ''
- name: 'resourceGroup'
  type: string
  default: ''
- name: 'region'
  type: string
  default: 'North Central US'  
- name: 'botapp'
  type: string
  default: ''
- name: 'principal'
  type: string
  default: ''

stages:
- stage: ${{parameters.stageTitle}}
  jobs:
  - job: 'backend_app_deployment'
    pool:
      vmImage: 'windows-latest'

    steps:
    - template: 'downloadAndDeploy.yml'
      parameters:
        artifact: riversfunc
        appType: functionapp
        principal: '${{parameters.principal}}'
        appName: "${{parameters.appName}}"

    - template: 'downloadAndDeploy.yml'
      parameters:
        artifact: preferencesfunc
        appType: functionapp
        principal: '${{parameters.principal}}'
        appName: '${{parameters.appName}}-preferences'      
          
  - job: 'backend_security'
    pool:
      vmImage: 'windows-latest'
    dependsOn: 'backend_app_deployment'
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'Deploy APIM to waterfinder'
      inputs:
          azureSubscription: '${{parameters.principal}}'
          resourceGroupName: '${{parameters.resourceGroup}}'
          location: '${{parameters.region}}'
          csmFile: 'whitewaterfinder.infrastructure/apim/apimdeploy.json'  
          csmParametersFile: 'whitewaterfinder.infrastructure/apim/apimparameters.json'   
          overrideParameters: '-adminEmail "$(adminEmail)" -appName "${{parameters.appName}}" -preferencesApp "${{parameters.appName}}-preferences"'   

    - download: current
      artifact: infra

    - task: AzureCLI@2
      displayName: 'Configure APIM'
      inputs:
        azureSubscription: '${{parameters.principal}}'
        scriptType: ps
        scriptLocation: 'scriptPath'
        ScriptPath: '$(Pipeline.Workspace)/infra/apim/apimdeploy.ps1'    
        azurePowerShellVersion: LatestVersion      
        ScriptArguments: '${{parameters.resourceGroup}} $(Pipeline.Workspace)\infra'      

  - job: 'deploy_bot_code'
    pool:
      vmImage: 'windows-latest'
    steps:
      - template: 'downloadAndDeploy.yml'
        parameters: 
          artifact: websterbot
          appType: app
          principal: '${{parameters.principal}}'
          appName: '${{parameters.botapp}}'                     