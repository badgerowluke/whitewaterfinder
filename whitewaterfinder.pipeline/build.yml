parameters:
- name: vstsFeed
  type: string
  default: ''
- name: principal
  type: string
  default: ''
- name: providerstorage
  type: string
  default: 'tfstatewaterfinder'
- name: resourceGroup
  type: string
  default: ''
- name: region
  type: string
  default: ''
- name: tenant
  type: string
  default: ''
- name: 'adminEmail'
  type: string
  default: ''
  
- name: 'adminId'
  type: string
  default: ''  

- name: 'storageAccountName'
  type: string
  default: ''
- name: 'storageAccountType'
  type: string
  default: 'Standard_LRS'

- name: 'appName'
  type: string
  default: ''  
- name: 'botName'
  type: string
  default: ''

- name: 'luisAuthoring'
  type: string
  default: ''

- name: 'luisEndpointName'
  type: string
  default: ''

stages:
- stage: Build
  jobs:
  - job: build_infra
    pool:
      vmImage: 'windows-latest'
    continueOnError: false
    steps:
    - task: AzureResourceGroupDeployment@2
      displayName: 'provision AKV'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        csmFile: 'whitewaterfinder.infrastructure/keyvault/kvtemplate.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/keyvault/kvparameters.json'
        overrideParameters: '-tenantId "${{ parameters.tenant }}" -adminId "${{ parameters.adminId }}" -kvName "${{ parameters.resourceGroup }}"'     

        
    - task: AzureResourceGroupDeployment@2
      displayName: 'provision storage'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{parameters.region}}'
        csmFile: 'whitewaterfinder.infrastructure/storage/storage.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/storage/storageparams.json'
        overrideParameters: '-storageAccountType "${{ parameters.storageAccountType }}" -appName "${{ parameters.appName }}" -preferencesApp "${{ parameters.appName }}-preferences" -storageAccountName "${{ parameters.storageAccountName }}"'           
        deploymentOutputs: 'sharedValues'        

   

    - task: AzureResourceGroupDeployment@2
      displayName: 'provision (Search) Resources'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        csmFile: 'whitewaterfinder.infrastructure/search/search.json'
        csmParameetersFile: 'whitewaterfinder.infrastructure/search/searchparams.json'        
        deploymentOutputs: 'searchOutput'
    
    - task: Powershell@2
      displayName: 'parse ARM output'
      inputs:
        arguments: "-output $(searchOutput)"
        targetType: inline
        script: |
          param (
            [Parameter(Mandatory=$true)][string] $output
          )

          $json = $output | ConvertFrom-Json
          Write-Host $json
          Write-Host "##vso[task.setvariable variable=searchKey]$json.searchKey.value"

    - task: AzureResourceGroupDeployment@2
      displayName: provision apis
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        csmFile: 'whitewaterfinder.infrastructure/api/api.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/api/apiparams.json'
        overrideParameters: '-storageAccountName ${{ parameters.storageAccountName }} -storageAccountType "${{ parameters.storageAccountType }}" -appName "${{ parameters.appName }}" -appPlanName "WaterFinderPlan" -preferencesApp "${{ parameters.appName }}-preferences"  -azureSearchKey $(searchKey)'          
        deploymentOutputs: 'riverKeys usersKey'

    - task: AzureCli@2
      displayName: 'create or pull MSFT App ID'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        scriptType: ps
        scriptLocation: 'scriptPath'
        ScriptPath: 'whitewaterfinder.infrastructure/app-registration-create.ps1'
        ScriptArguments: '"${{ parameters.botName }}-ar"'

    - task: AzureResourceGroupDeployment@2
      displayName: provision bot
      inputs: 
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'      
        csmFile: 'whitewaterfinder.infrastructure/cognitiveservices/bot/botdeploy.json' #/whitewaterfinder.infrastructure/cognitiveservices/bot/botdeploy.json
        csmParametersFile: 'whitewaterfinder.infrastructure/cognitiveservices/bot/botparams.json'
        overrideParameters: '-botAppName "${{ parameters.botName }}" -botInsightsName "${{ parameters.appName }}" -msftAppId "$(newAppId)" -storageAccountName ${{ parameters.storageAccountName }}'

    - task: AzureResourceGroupDeployment@2
      displayName: 'Provision APIM'
      inputs:
          azureSubscription: '${{ parameters.principal }}'
          resourceGroupName: '${{ parameters.resourceGroup }}'
          location: '${{parameters.region}}'
          csmFile: 'whitewaterfinder.infrastructure/apim/apimdeploy.json'  
          csmParametersFile: 'whitewaterfinder.infrastructure/apim/apimparameters.json'   
          overrideParameters: '-adminEmail "${{ parameters.adminEmail }}" -appName "${{ parameters.appName }}" -preferencesApp "${{ parameters.appName }}-preferences"'   

    - task: AzureResourceGroupDeployment@2
      displayName: 'provision cognititve services'
      inputs: 
          azureSubscription: '${{ parameters.principal }}'
          resourceGroupName: '${{ parameters.resourceGroup }}'
          location: '${{parameters.region}}'
          csmFile: 'whitewaterfinder.infrastructure/cognitiveservices/cognitiveservices.json'
          csmParametersFile: 'whitewaterfinder.infrastructure/cognitiveservices/cogservicesparams.json'      
          overrideParameters: '-luisName "${{ parameters.luisEndpointName }}" -authoringName "${{ parameters.luisAuthoring }}" -botAppName "${{ parameters.botName }}" -botInsightsName "${{ parameters.appName }}"'  


    - task: AzureResourceGroupDeployment@2
      displayName: 'provision Sendgrid'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'
        csmFile: 'whitewaterfinder.infrastructure/communications/communicationdeploy.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/communications/communicationdeployparams.json'
        overrideParameters: '-password "$(sendgridpassword)" -email "${{ parameters.adminEmail }}" -website "$(adminwebsite)"'

    - task: AzureResourceGroupDeployment@2
      displayName: 'provision static web app'
      inputs:
        azureSubscription: '${{ parameters.principal }}'
        resourceGroupName: '${{ parameters.resourceGroup }}'
        location: '${{ parameters.region }}'      
        csmFile: 'whitewaterfinder.infrastructure/site/staticsite.json'
        csmParametersFile: 'whitewaterfinder.infrastructure/site/staticsiteparams.json'
        overrideParameters: '-repositoryToken $(repositoryToken)'
  
  # - job: build_dotnet
  #   pool:
  #     vmImage: 'ubuntu-latest'
  #   continueOnError: false
  #   steps:
  #   - template: 'buildDotnet.yml'   
  #     parameters:
  #       vstsFeed: '${{parameters.vstsFeed}}' 

  # - job: build_node
  #   pool:
  #     vmImage: 'ubuntu-latest'
  #   continueOnError: false
  #   steps:
  #   - template: 'buildNode.yml'
