parameters:
- name: vstsFeed
  type: string
  default: ''
steps:
- task: DotNetCoreCLI@2
  displayName: Restore
  inputs:
    command: restore
    projects: '**/*.csproj'
    vstsFeed: '${{parameters.vstsFeed}}'

- task: DotNetCoreCLI@2
  displayName: Build
  inputs:
    command: 'build'
    projects: '**/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --no-restore'


- task: DotNetCoreCLI@2
  displayName: Test
  inputs:
    command: test
    projects: '**/*[Tt]est/*.csproj'
    arguments: '--configuration $(BuildConfiguration) --no-build --logger trx /p:CollectCoverage=true  /p:CoverletOutputFormat=cobertura   /p:CoverletOutput=$(Build.SourcesDirectory)/TestResults/Coverage/'

- task: PublishTestResults@2
  inputs:
    testResultsFormat: 'XUnit'
    testResultsFiles: '**/*.trx'
    mergeTestResults: true
    failTaskOnFailedTests: true    

- task: DotNetCoreCLI@2
  displayName: Publish bot app
  inputs:
    command: publish
    projects: '**/whitewaterfinder.app.bot/whitewaterfinder.app.bot.csproj'
    arguments: '--configuration $(BuildConfiguration)'

- task: ArchiveFiles@2
  displayName: bundle api 
  inputs: 
    rootFolderOrFile: whitewaterfinder.api/bin/release/netcoreapp3.0
    includeRootFolder: false
    archiveFile: $(Pipeline.Workspace)/riversfunc/app.zip

- task: PublishBuildArtifacts@1
  displayName: 'Publish River Functions'
  inputs:
    PathtoPublish: $(Pipeline.Workspace)/riversfunc/app.zip
    ArtifactName: 'riversfunc'

- task: PublishBuildArtifacts@1
  displayName: 'Publish Bot App'
  inputs:
    PathtoPublish: whitewaterfinder.app.bot/bin/release/netcoreapp2.1/publish.zip
    ArtifactName: 'websterbot'        